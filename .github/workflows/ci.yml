name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build:
    name: Build Executables
    needs: test
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'release'

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: windows-latest
            platform: win
            arch: x64
          - os: macos-latest
            platform: macos
            arch: x64
          - os: macos-latest
            platform: macos
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build executable
        run: |
          mkdir -p dist
          npx pkg . --targets node18-${{ matrix.platform }}-${{ matrix.arch }} --out-path dist/

      - name: Rename executable (Windows)
        if: matrix.platform == 'win'
        run: |
          cd dist
          mv wsei-course-downloader.exe wsei-downloader-${{ matrix.platform }}-${{ matrix.arch }}.exe

      - name: Rename executable (Unix)
        if: matrix.platform != 'win'
        run: |
          cd dist
          mv wsei-course-downloader wsei-downloader-${{ matrix.platform }}-${{ matrix.arch }}

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v3
        with:
          name: wsei-downloader-${{ matrix.platform }}-${{ matrix.arch }}
          path: dist/wsei-downloader-${{ matrix.platform }}-${{ matrix.arch }}*

      - name: Upload to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/wsei-downloader-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.platform == 'win' && '.exe' || '' }}
          asset_name: wsei-downloader-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.platform == 'win' && '.exe' || '' }}
          asset_content_type: application/octet-stream

  build-validation:
    name: Build Validation
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name != 'release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Test build process
        run: |
          mkdir -p dist
          npx pkg . --targets node18-linux-x64 --out-path dist/
          ls -la dist/
          echo "Testing executable startup (Chrome not found error is expected):"
          timeout 10 ./dist/wsei-course-downloader || echo "Build validation complete - executable starts correctly"
